eureka_client поставщик микросервисов

File > New > Module
Выбираем Spring Initializr
Name - eureka_client
Language - Java
Type - Gradle-Groovy
Project SDK - SDK 17
Packaging - Jar

NEXT

Spring Boot 2.7.10
Оставляем галку на Download pre-build shared indexes for
JDK and Maven libraries

Выбираем зависимости dependencies:
Web > Spring Web
отвечает за web функционал Spring, например можно создавать Rest сервисы

Spring Cloud Discovery > Eureka Discovery Client
нужен, чтобы опубликовать сервисы на Eureka Server

FINISH

---

Проверяем файл настроек именно этого проекта
microservices_start\eureka_client\build.gradle
id 'org.springframework.boot' version '2.7.10'

microservices_start\eureka_client\settings.gradle
rootProject.name = 'eureka_client'

microservices_start\eureka_client\gradle\wrapper\gradle-wrapper.properties
distributionUrl=https\://services.gradle.org/distributions/gradle-8.0-bin.zip

Не забываем добавлять вновь созданные модули в корневой файл проекта
microservices_start\settings.gradle
где у нас есть запись:
rootProject.name = 'microservices_start'
Например добавляем туда eureka_client таким образом
includeBuild 'eureka_client'

---
В файл
microservices_start\eureka_client\src\main\java\com\example\eureka_client\EurekaClientApplication.java
добавляем аннотацию
@EnableEurekaClient

---

Заполняем настройки в файле
microservices_start\eureka_client\src\main\resources\application.properties
# любой порт подключается автоматически
server.port=0

# id (имя) приложения - желательно указывать всегда в микросервисных приложениях
spring.application.name=eclient

# url, куда будет происходить регистрация микросервисов
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
